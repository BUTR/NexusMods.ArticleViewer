@using NexusMods.ArticleViewer.Client.Models
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @foreach (var link in _links)
        {
            <li @onclick="() => OnSelectedPage(link)" style="cursor: pointer;" class="page-item @(link.Enabled ? null : "disabled") @(link.Active ? "active" : null)">
                <span class="page-link" href="#">@link.Text</span>
            </li>
        }
    </ul>
</nav>

@code
{
    [Parameter]
    public PagingMetadata Metadata { get; set; } = default!;
    [Parameter]
    public int Spread { get; set; } = default!;
    [Parameter]
    public EventCallback<int> SelectedPage { get; set; } = default!;

    private List<PagingLink> _links = default!;

    protected override void OnParametersSet()
    {
        CreatePaginationLinks();
    }

    private void CreatePaginationLinks()
    {
        _links = new List<PagingLink> { new(Metadata.CurrentPage - 1, Metadata.HasPrevious, "Previous") };


        for (int i = 1; i <= Metadata.TotalPages; i++)
        {
            if(i >= Metadata.CurrentPage - Spread && i <= Metadata.CurrentPage + Spread)
            {
                _links.Add(new PagingLink(i, true, i.ToString()) { Active = Metadata.CurrentPage == i });
            }
        }

        _links.Add(new PagingLink(Metadata.CurrentPage + 1, Metadata.HasNext, "Next"));
    }

    private async Task OnSelectedPage(PagingLink link)
    {
        if (link.Page == Metadata.CurrentPage || !link.Enabled)
            return;

        Metadata.CurrentPage = link.Page;
        await SelectedPage.InvokeAsync(link.Page);
    }
}
